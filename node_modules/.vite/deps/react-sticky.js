import {
  require_react_dom
} from "./chunk-GJ5PGLZ3.js";
import {
  require_prop_types
} from "./chunk-ZRH7GCOD.js";
import {
  require_react
} from "./chunk-XLKA4T3M.js";
import {
  __commonJS
} from "./chunk-WXXH56N5.js";

// node_modules/react-sticky/lib/Sticky.js
var require_Sticky = __commonJS({
  "node_modules/react-sticky/lib/Sticky.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactDom = require_react_dom();
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Sticky = function(_Component) {
      _inherits(Sticky2, _Component);
      function Sticky2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Sticky2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Sticky2.__proto__ || Object.getPrototypeOf(Sticky2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          isSticky: false,
          wasSticky: false,
          style: {}
        }, _this.handleContainerEvent = function(_ref2) {
          var distanceFromTop = _ref2.distanceFromTop, distanceFromBottom = _ref2.distanceFromBottom, eventSource = _ref2.eventSource;
          var parent = _this.context.getParent();
          var preventingStickyStateChanges = false;
          if (_this.props.relative) {
            preventingStickyStateChanges = eventSource !== parent;
            distanceFromTop = -(eventSource.scrollTop + eventSource.offsetTop) + _this.placeholder.offsetTop;
          }
          var placeholderClientRect = _this.placeholder.getBoundingClientRect();
          var contentClientRect = _this.content.getBoundingClientRect();
          var calculatedHeight = contentClientRect.height;
          var bottomDifference = distanceFromBottom - _this.props.bottomOffset - calculatedHeight;
          var wasSticky = !!_this.state.isSticky;
          var isSticky = preventingStickyStateChanges ? wasSticky : distanceFromTop <= -_this.props.topOffset && distanceFromBottom > -_this.props.bottomOffset;
          distanceFromBottom = (_this.props.relative ? parent.scrollHeight - parent.scrollTop : distanceFromBottom) - calculatedHeight;
          var style = !isSticky ? {} : {
            position: "fixed",
            top: bottomDifference > 0 ? _this.props.relative ? parent.offsetTop - parent.offsetParent.scrollTop : 0 : bottomDifference,
            left: placeholderClientRect.left,
            width: placeholderClientRect.width
          };
          if (!_this.props.disableHardwareAcceleration) {
            style.transform = "translateZ(0)";
          }
          _this.setState({
            isSticky,
            wasSticky,
            distanceFromTop,
            distanceFromBottom,
            calculatedHeight,
            style
          });
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Sticky2, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          if (!this.context.subscribe)
            throw new TypeError("Expected Sticky to be mounted within StickyContainer");
          this.context.subscribe(this.handleContainerEvent);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.context.unsubscribe(this.handleContainerEvent);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          this.placeholder.style.paddingBottom = this.props.disableCompensation ? 0 : (this.state.isSticky ? this.state.calculatedHeight : 0) + "px";
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var element = _react2.default.cloneElement(this.props.children({
            isSticky: this.state.isSticky,
            wasSticky: this.state.wasSticky,
            distanceFromTop: this.state.distanceFromTop,
            distanceFromBottom: this.state.distanceFromBottom,
            calculatedHeight: this.state.calculatedHeight,
            style: this.state.style
          }), {
            ref: function ref(content) {
              _this2.content = _reactDom2.default.findDOMNode(content);
            }
          });
          return _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement("div", { ref: function ref(placeholder) {
              return _this2.placeholder = placeholder;
            } }),
            element
          );
        }
      }]);
      return Sticky2;
    }(_react.Component);
    Sticky.propTypes = {
      topOffset: _propTypes2.default.number,
      bottomOffset: _propTypes2.default.number,
      relative: _propTypes2.default.bool,
      children: _propTypes2.default.func.isRequired
    };
    Sticky.defaultProps = {
      relative: false,
      topOffset: 0,
      bottomOffset: 0,
      disableCompensation: false,
      disableHardwareAcceleration: false
    };
    Sticky.contextTypes = {
      subscribe: _propTypes2.default.func,
      unsubscribe: _propTypes2.default.func,
      getParent: _propTypes2.default.func
    };
    exports.default = Sticky;
  }
});

// node_modules/performance-now/lib/performance-now.js
var require_performance_now = __commonJS({
  "node_modules/performance-now/lib/performance-now.js"(exports, module) {
    (function() {
      var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
      if (typeof performance !== "undefined" && performance !== null && performance.now) {
        module.exports = function() {
          return performance.now();
        };
      } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
        module.exports = function() {
          return (getNanoSeconds() - nodeLoadTime) / 1e6;
        };
        hrtime = process.hrtime;
        getNanoSeconds = function() {
          var hr;
          hr = hrtime();
          return hr[0] * 1e9 + hr[1];
        };
        moduleLoadTime = getNanoSeconds();
        upTime = process.uptime() * 1e9;
        nodeLoadTime = moduleLoadTime - upTime;
      } else if (Date.now) {
        module.exports = function() {
          return Date.now() - loadTime;
        };
        loadTime = Date.now();
      } else {
        module.exports = function() {
          return (/* @__PURE__ */ new Date()).getTime() - loadTime;
        };
        loadTime = (/* @__PURE__ */ new Date()).getTime();
      }
    }).call(exports);
  }
});

// node_modules/raf/index.js
var require_raf = __commonJS({
  "node_modules/raf/index.js"(exports, module) {
    var now = require_performance_now();
    var root = typeof window === "undefined" ? global : window;
    var vendors = ["moz", "webkit"];
    var suffix = "AnimationFrame";
    var raf = root["request" + suffix];
    var caf = root["cancel" + suffix] || root["cancelRequest" + suffix];
    for (i = 0; !raf && i < vendors.length; i++) {
      raf = root[vendors[i] + "Request" + suffix];
      caf = root[vendors[i] + "Cancel" + suffix] || root[vendors[i] + "CancelRequest" + suffix];
    }
    var i;
    if (!raf || !caf) {
      last = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
      raf = function(callback) {
        if (queue.length === 0) {
          var _now = now(), next = Math.max(0, frameDuration - (_now - last));
          last = next + _now;
          setTimeout(function() {
            var cp = queue.slice(0);
            queue.length = 0;
            for (var i2 = 0; i2 < cp.length; i2++) {
              if (!cp[i2].cancelled) {
                try {
                  cp[i2].callback(last);
                } catch (e) {
                  setTimeout(function() {
                    throw e;
                  }, 0);
                }
              }
            }
          }, Math.round(next));
        }
        queue.push({
          handle: ++id,
          callback,
          cancelled: false
        });
        return id;
      };
      caf = function(handle) {
        for (var i2 = 0; i2 < queue.length; i2++) {
          if (queue[i2].handle === handle) {
            queue[i2].cancelled = true;
          }
        }
      };
    }
    var last;
    var id;
    var queue;
    var frameDuration;
    module.exports = function(fn) {
      return raf.call(root, fn);
    };
    module.exports.cancel = function() {
      caf.apply(root, arguments);
    };
    module.exports.polyfill = function(object) {
      if (!object) {
        object = root;
      }
      object.requestAnimationFrame = raf;
      object.cancelAnimationFrame = caf;
    };
  }
});

// node_modules/react-sticky/lib/Container.js
var require_Container = __commonJS({
  "node_modules/react-sticky/lib/Container.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _raf = require_raf();
    var _raf2 = _interopRequireDefault(_raf);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Container = function(_PureComponent) {
      _inherits(Container2, _PureComponent);
      function Container2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Container2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Container2.__proto__ || Object.getPrototypeOf(Container2)).call.apply(_ref, [this].concat(args))), _this), _this.events = ["resize", "scroll", "touchstart", "touchmove", "touchend", "pageshow", "load"], _this.subscribers = [], _this.rafHandle = null, _this.subscribe = function(handler) {
          _this.subscribers = _this.subscribers.concat(handler);
        }, _this.unsubscribe = function(handler) {
          _this.subscribers = _this.subscribers.filter(function(current) {
            return current !== handler;
          });
        }, _this.notifySubscribers = function(evt) {
          if (!_this.framePending) {
            var currentTarget = evt.currentTarget;
            _this.rafHandle = (0, _raf2.default)(function() {
              _this.framePending = false;
              var _this$node$getBoundin = _this.node.getBoundingClientRect(), top = _this$node$getBoundin.top, bottom = _this$node$getBoundin.bottom;
              _this.subscribers.forEach(function(handler) {
                return handler({
                  distanceFromTop: top,
                  distanceFromBottom: bottom,
                  eventSource: currentTarget === window ? document.body : _this.node
                });
              });
            });
            _this.framePending = true;
          }
        }, _this.getParent = function() {
          return _this.node;
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Container2, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            subscribe: this.subscribe,
            unsubscribe: this.unsubscribe,
            getParent: this.getParent
          };
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;
          this.events.forEach(function(event) {
            return window.addEventListener(event, _this2.notifySubscribers);
          });
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          var _this3 = this;
          if (this.rafHandle) {
            _raf2.default.cancel(this.rafHandle);
            this.rafHandle = null;
          }
          this.events.forEach(function(event) {
            return window.removeEventListener(event, _this3.notifySubscribers);
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this4 = this;
          return _react2.default.createElement("div", _extends({}, this.props, {
            ref: function ref(node) {
              return _this4.node = node;
            },
            onScroll: this.notifySubscribers,
            onTouchStart: this.notifySubscribers,
            onTouchMove: this.notifySubscribers,
            onTouchEnd: this.notifySubscribers
          }));
        }
      }]);
      return Container2;
    }(_react.PureComponent);
    Container.childContextTypes = {
      subscribe: _propTypes2.default.func,
      unsubscribe: _propTypes2.default.func,
      getParent: _propTypes2.default.func
    };
    exports.default = Container;
  }
});

// node_modules/react-sticky/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-sticky/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StickyContainer = exports.Sticky = void 0;
    var _Sticky = require_Sticky();
    var _Sticky2 = _interopRequireDefault(_Sticky);
    var _Container = require_Container();
    var _Container2 = _interopRequireDefault(_Container);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.Sticky = _Sticky2.default;
    exports.StickyContainer = _Container2.default;
    exports.default = _Sticky2.default;
  }
});
export default require_lib();
//# sourceMappingURL=react-sticky.js.map
